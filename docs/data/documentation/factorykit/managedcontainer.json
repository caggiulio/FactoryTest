{"metadata":{"externalID":"s:10FactoryKit16ManagedContainerP","modules":[{"name":"FactoryKit"}],"title":"ManagedContainer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}]},"topicSections":[{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager"]},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-2xdpp","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5jwtc","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-ob3v"]}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Inherited By","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"],"type":"inheritedBy","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"],"type":"conformingTypes","kind":"relationships"}],"variants":[{"paths":["\/documentation\/factorykit\/managedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer"},"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"},{"text":" : AnyObject, ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"an example of passing such a container to a view model for dependency resolution.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"]},{"inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","isActive":true},{"type":"text","text":" for more information."}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"url":"\/documentation\/factorykit\/managedcontainer","type":"topic","title":"ManagedContainer","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/decorator(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"title":"decorator(_:)","url":"\/documentation\/factorykit\/managedcontainer\/decorator(_:)"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-777bk":{"abstract":[{"text":"Defines a with function to allow container transformation on assignment.","type":"text"}],"type":"topic","kind":"symbol","title":"with(_:)","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-777bk","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"kind":"article","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","url":"\/documentation\/factorykit\/containers","title":"Containers","type":"topic","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"role":"article"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/sharedcontainer","title":"SharedContainer","type":"topic","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-ob3v":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-ob3v","abstract":[{"type":"text","text":"Defines an async with function to allow container transformation on assignment."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"with"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"with(_:)","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-ob3v"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-4mfii":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"type":"topic","title":"promised(key:file:line:)","kind":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-4mfii","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10FactoryKit09ParameterA0V","kind":"typeIdentifier","text":"ParameterFactory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii"},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit/Resolving":{"navigatorTitle":[{"kind":"identifier","text":"Resolving"}],"type":"topic","url":"\/documentation\/factorykit\/resolving","title":"Resolving","abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resolving"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-5jwtc":{"kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5jwtc","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound ParameterFactory."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit09ParameterA0V","text":"ParameterFactory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"callAsFunction(key:_:)","url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-5jwtc"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-2xdpp":{"url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-2xdpp","type":"topic","title":"callAsFunction(key:_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-2xdpp","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound Factory."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit04VoidA4Typea","text":"VoidFactoryType"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Container":{"navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/container","title":"Container","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"type":"topic","kind":"symbol","title":"promised(key:file:line:)","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/manager":{"required":true,"type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/manager","title":"manager","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager","abstract":[{"type":"text","text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in"},{"type":"text","text":" "},{"type":"text","text":"this fashion makes creating and using your own custom containers much simpler."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"manager","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit16ContainerManagerC","text":"ContainerManager","kind":"typeIdentifier"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/reset(options:)":{"abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"type":"topic","kind":"symbol","title":"reset(options:)","url":"\/documentation\/factorykit\/managedcontainer\/reset(options:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO"},{"kind":"text","text":")"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)"}}}