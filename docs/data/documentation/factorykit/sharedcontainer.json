{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.method"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared"],"title":"Type Properties","anchor":"Type-Properties","generated":true},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.type.method"],"title":"Type Methods","anchor":"Type-Methods","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","doc:\/\/FactoryKit\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"],"title":"Conforming Types","kind":"relationships","type":"conformingTypes"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"},"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/sharedcontainer"]}],"metadata":{"symbolKind":"protocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"roleHeading":"Protocol","externalID":"s:10FactoryKit15SharedContainerP","modules":[{"name":"FactoryKit"}],"title":"SharedContainer","navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"ManagedContainer","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","preciseIdentifier":"s:10FactoryKit16ManagedContainerP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}],"type":"paragraph"},{"code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The default "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","isActive":true},{"type":"text","text":" provided is a SharedContainer. It can be used in both roles as needed."}],"type":"paragraph"},{"inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","type":"reference"},{"text":" for more information.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"references":{"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","type":"topic","title":"ManagedContainer","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/managedcontainer","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Container":{"navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/container","title":"Container","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/preview(_:)-swift.type.method":{"type":"topic","role":"symbol","title":"preview(_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.type.method","abstract":[{"text":"Defines a preview convenience function to allow easy shared container transformations in SwiftUI Previews.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preview"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EmptyView","preciseIdentifier":"s:7SwiftUI9EmptyViewV"}],"url":"\/documentation\/factorykit\/sharedcontainer\/preview(_:)-swift.type.method"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/preview(_:)-swift.method":{"url":"\/documentation\/factorykit\/sharedcontainer\/preview(_:)-swift.method","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.method","abstract":[{"text":"Defines a preview convenience function to allow easy container transformations in SwiftUI Previews.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preview"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EmptyView","preciseIdentifier":"s:7SwiftUI9EmptyViewV"}],"title":"preview(_:)","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"kind":"article","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","url":"\/documentation\/factorykit\/containers","title":"Containers","type":"topic","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"role":"article"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/shared":{"required":true,"url":"\/documentation\/factorykit\/sharedcontainer\/shared","kind":"symbol","title":"shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/sharedcontainer","title":"SharedContainer","type":"topic","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"role":"symbol"}}}