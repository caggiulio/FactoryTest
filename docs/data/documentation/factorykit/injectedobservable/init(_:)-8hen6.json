{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"variants":[{"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}]},"platforms":[{"introducedAt":"17.0","deprecated":false,"name":"iOS","beta":false,"unavailable":false},{"introducedAt":"14.0","deprecated":false,"name":"macOS","beta":false,"unavailable":false},{"introducedAt":"17.0","deprecated":false,"name":"tvOS","beta":false,"unavailable":false},{"introducedAt":"10.0","deprecated":false,"name":"watchOS","beta":false,"unavailable":false}],"extendedModule":"FactoryKit","role":"symbol","symbolKind":"init","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","title":"init(_:)","modules":[{"name":"FactoryKit"}]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Observable"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","title":"init(_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedObservable"}],"title":"InjectedObservable","url":"\/documentation\/factorykit\/injectedobservable","abstract":[{"text":"A property wrapper that injects an Observable dependency into a SwiftUI view.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","navigatorTitle":[{"kind":"identifier","text":"InjectedObservable"}]}}}