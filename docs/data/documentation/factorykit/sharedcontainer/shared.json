{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This container is used by the various @Injected property wrappers to resolve the keyPath to a given Factory. Care should be taken in","type":"text"},{"text":" ","type":"text"},{"text":"mixed environments where you’re passing container references AND using the @Injected property wrappers.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Note this should be defined as a @TaskLocal variable to be able to use its isolation mechanism, which is especially useful for test parallelization.","type":"text"},{"text":" ","type":"text"},{"text":"If you don’t want to use the @TaskLocal isolation mechanism, then you should define a ‘let’ variable, not ‘var’.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Using ‘static var’ (without @TaskLocal being attached to it) will cause Swift to issue concurrency warnings in the future whenever the container is accessed."}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Type Property","modules":[{"name":"FactoryKit"}],"symbolKind":"property","title":"shared","externalID":"s:10FactoryKit15SharedContainerP6sharedxvpZ","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/sharedcontainer\/shared"]}],"abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"references":{"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/sharedcontainer","title":"SharedContainer","type":"topic","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/shared":{"required":true,"url":"\/documentation\/factorykit\/sharedcontainer\/shared","kind":"symbol","title":"shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared"}}}