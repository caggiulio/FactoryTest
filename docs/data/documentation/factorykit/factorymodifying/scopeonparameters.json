{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The behavior can be changed with the ","type":"text"},{"type":"codeVoice","code":".scopeOnParameters"},{"type":"text","text":" modifier."}]},{"code":["var parameterService: ParameterFactory<Int, ParameterService> {","    self { ParameterService(value: $0) }.scopeOnParameters.cached","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The passed parameter must be Hashable for this modifier to appear and for the per-parameter caching functionality to occur."}]}],"kind":"content"}],"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"FactoryKit","externalID":"s:10FactoryKit0A9ModifyingPAASH1PRpzrlE17scopeOnParametersxvp","roleHeading":"Instance Property","title":"scopeOnParameters","modules":[{"name":"FactoryKit"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"abstract":[{"type":"text","text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are"},{"type":"text","text":" "},{"type":"text","text":"passed on future requests."}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/scopeOnParameters","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/factorymodifying\/scopeonparameters"]}],"references":{"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factorykit\/factorymodifying","kind":"symbol","title":"FactoryModifying","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factoryâ€™s. Used to add scope and decorator modifiers to Factory."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/scopeOnParameters":{"abstract":[{"type":"text","text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"type":"topic","title":"scopeOnParameters","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"P"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/factorykit\/factorymodifying\/scopeonparameters","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeOnParameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/scopeOnParameters"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"}}}