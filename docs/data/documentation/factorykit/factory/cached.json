{"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"]}]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/cached","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/factory\/cached"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class"},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"FactoryKit","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"property","title":"cached","externalID":"s:10FactoryKit0A9ModifyingPAAE6cachedxvp::SYNTHESIZED::s:10FactoryKit0A0V","modules":[{"name":"FactoryKit"}],"roleHeading":"Instance Property"},"references":{"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Factory/cached":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"cached","url":"\/documentation\/factorykit\/factory\/cached","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/cached"},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/cached-swift.class","title":"Scope.Cached","type":"topic","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"type":"topic","title":"Factory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","url":"\/documentation\/factorykit\/factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"kind":"symbol"}}}