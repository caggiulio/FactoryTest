{"variants":[{"paths":["\/documentation\/factorykit\/dynamicinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"}],"role":"symbol","modules":[{"name":"FactoryKit"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"title":"DynamicInjected","externalID":"s:10FactoryKit15DynamicInjectedV","roleHeading":"Structure","symbolKind":"struct"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue"],"title":"Instance Properties","anchor":"Instance-Properties"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"type":"text","text":" "},{"type":"text","text":"EnvironmentObject in SwiftUI."}]},{"type":"codeListing","syntax":"swift","code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"code":"shared","type":"codeVoice"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"text":"allows you to point an instance of your own custom container type.","type":"text"}]},{"style":"important","name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every "},{"type":"strong","inlineContent":[{"text":"access","type":"text"}]},{"type":"text","text":"."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the"},{"type":"text","text":" "},{"type":"text","text":"properties are accessed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,"},{"type":"text","text":" "},{"type":"text","text":"then it probably needs to be cached using one of Factory’s caching mechanisms."}]},{"code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit/DynamicInjected":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"}],"title":"DynamicInjected","url":"\/documentation\/factorykit\/dynamicinjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected","navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-8b8lt":{"url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-8b8lt","kind":"symbol","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/projectedValue":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/factorykit\/dynamicinjected\/projectedvalue","title":"projectedValue","type":"topic","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-m0lr":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr","type":"topic","title":"init(_:)","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10FactoryKit9ContainerC","kind":"typeIdentifier","text":"Container"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-m0lr","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/wrappedValue":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"title":"wrappedValue","url":"\/documentation\/factorykit\/dynamicinjected\/wrappedvalue","abstract":[{"text":"Manages the wrapped dependency.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue"}}}