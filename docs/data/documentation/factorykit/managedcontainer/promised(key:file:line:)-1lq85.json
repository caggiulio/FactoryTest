{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85"},"abstract":[{"text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution.","type":"text"}],"variants":[{"paths":["\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"FactoryKit","role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"externalID":"s:10FactoryKit16ManagedContainerPAAE8promised3key4file4lineAA0A0Vyqd__SgGs12StaticStringV_AMSutlF","title":"promised(key:file:line:)","modules":[{"name":"FactoryKit"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#function"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier","text":"Factory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"syntax":"swift","code":["extension Container {","    public var accountLoader: Factory<AccountLoading?> { promised() }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"When run in debug mode and the application attempts to resolve an unregistered accountLoader, "},{"type":"codeVoice","code":"promised()"},{"type":"text","text":" will trigger a fatalError to"},{"type":"text","text":" "},{"type":"text","text":"inform you of the mistake. But in a released application, "},{"type":"codeVoice","code":"promised()"},{"type":"text","text":" simply returns nil and your application can continue on."}],"type":"paragraph"}]}],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"type":"topic","title":"Factory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","url":"\/documentation\/factorykit\/factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"type":"topic","kind":"symbol","title":"promised(key:file:line:)","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","type":"topic","title":"ManagedContainer","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/managedcontainer","kind":"symbol"}}}